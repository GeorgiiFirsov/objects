---
BasedOnStyle: Microsoft
Language: Cpp
Standard: Auto

AccessModifierOffset: -4

AlignAfterOpenBracket: DontAlign
AlignArrayOfStructures: Left
AlignConsecutiveAssignments: true
AlignEscapedNewlines: Left
AlignOperands: AlignAfterOperator
AlignTrailingComments: true

AllowAllArgumentsOnNextLine: true
AllowAllConstructorInitializersOnNextLine: false
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortBlocksOnASingleLine: Empty
AllowShortCaseLabelsOnASingleLine: false
AllowShortEnumsOnASingleLine: false
AllowShortFunctionsOnASingleLine: InlineOnly
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: false

AlwaysBreakAfterDefinitionReturnType: None
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakTemplateDeclarations: 'Yes'

BinPackArguments: true
BinPackParameters: false

BitFieldColonSpacing: Both

BreakBeforeBraces: Custom
BraceWrapping:
    AfterCaseLabel: true
    AfterClass: true
    AfterControlStatement: true
    AfterEnum: true
    AfterFunction: true
    AfterNamespace: false
    AfterStruct: true
    AfterUnion: true
    AfterExternBlock: false

    BeforeCatch: true
    BeforeElse: true
    BeforeLambdaBody: false
    BeforeWhile: true

    IndentBraces: false
    SplitEmptyFunction: false
    SplitEmptyRecord: false
    SplitEmptyNamespace: true

BreakBeforeBinaryOperators: None
BreakBeforeConceptDeclarations: Always
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: BeforeComma
BreakInheritanceList: BeforeComma
BreakStringLiterals: true

ColumnLimit: 160

CompactNamespaces: false

ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4

Cpp11BracedListStyle: false

DeriveLineEnding: false
DerivePointerAlignment: false

EmptyLineAfterAccessModifier: Never
EmptyLineBeforeAccessModifier: Always

FixNamespaceComments: true

IncludeBlocks: Preserve

IndentAccessModifiers: false
IndentCaseBlocks: true
IndentCaseLabels: false
IndentExternBlock: false
IndentGotoLabels: false
IndentPPDirectives: AfterHash
IndentRequiresClause: true
IndentWidth: 4
IndentWrappedFunctionNames: false

# Warning
# Setting this option to true could lead to incorrect code formatting 
# due to clang-format's lack of complete semantic information. As such, 
# extra care should be taken to review code changes made by this option.
InsertBraces: false

KeepEmptyLinesAtTheStartOfBlocks: false

LambdaBodyIndentation: Signature

MaxEmptyLinesToKeep: 4

NamespaceIndentation: None

PPIndentWidth: 3

PenaltyBreakAssignment: 50
PenaltyBreakBeforeFirstCallParameter: 50
#PenaltyBreakComment: 
#PenaltyBreakFirstLessLess: 
PenaltyBreakOpenParenthesis: 8
PenaltyBreakString: 8
PenaltyBreakTemplateDeclaration: 8
PenaltyExcessCharacter: 8
#PenaltyIndentedWhitespace: 
PenaltyReturnTypeOnItsOwnLine: 512

PointerAlignment: Left

QualifierAlignment: Left

ReferenceAlignment: Left

ReflowComments: false

RequiresClausePosition: OwnLine

# Well, I'd like to use 2 blank lines between classes, but
# putting 'Always' here breaks my desire completely :(
SeparateDefinitionBlocks: Leave

SortIncludes: false
SortUsingDeclarations: true

SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: false
SpaceAroundPointerQualifiers: Before

SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: true
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false

SpaceInEmptyBlock: true
SpaceInEmptyParentheses: false

SpacesBeforeTrailingComments: 2

SpacesInAngles: false
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInParentheses: false
SpacesInSquareBrackets: false

TabWidth: 4
UseTab: Never
